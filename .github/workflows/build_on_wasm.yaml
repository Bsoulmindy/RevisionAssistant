name: Build the Executable in WebAssembly

on:
  push:
    branches: ["develop_workflow_wasm"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      QT_ROOT_DIR: ${{ github.workspace }}/qtdir/qt-install-wasm
      QT_COMPILER_DIR: ${{ github.workspace }}/qtdir/qt-install-host
      QT_WASM_ZIP_NAME: qt-6.6.2-wasm-thread-exceptions.tar.xz
      QT_HOST_ZIP_NAME: qt-6.6.2-host.tar.xz

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      
      - name: Install Qt GCC
        run: |
          wget https://github.com/Bsoulmindy/HostedBinaries/releases/download/qt/${{ env.QT_WASM_ZIP_NAME }} -O ${{ env.QT_WASM_ZIP_NAME }}
          mkdir -p ${{ github.workspace }}/qtdir/
          tar -xf ${{ env.QT_WASM_ZIP_NAME }} -C ${{ github.workspace }}/qtdir/
      
      - name: Set up Emscripten SDK
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.37

      - name: Install Qt WASM
        run: |
          wget https://github.com/Bsoulmindy/HostedBinaries/releases/download/qt/${{ env.QT_WASM_ZIP_NAME }} -O ${{ env.QT_WASM_ZIP_NAME }}
          mkdir -p ${{ github.workspace }}/qtdir/
          tar -xf ${{ env.QT_WASM_ZIP_NAME }} -C ${{ github.workspace }}/qtdir/

      - name: Configure CMake
        run: >
          cmake 
          -DQT_QMAKE_EXECUTABLE:FILEPATH=${{ env.QT_ROOT_DIR }}/bin/qmake 
          -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${{ env.QT_ROOT_DIR }}/lib/cmake/Qt6/qt.toolchain.cmake
          -DCMAKE_CXX_FLAGS_INIT:STRING=-DQT_QML_DEBUG
          -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_COMPILER=em++
          -DCMAKE_C_COMPILER=emcc
          -DCMAKE_INSTALL_PREFIX=build/install
          -DCMAKE_PREFIX_PATH=${{ env.QT_ROOT_DIR }}
          -S ${{ github.workspace }}
          -DQT_HOST_PATH=${{ env.QT_COMPILER_DIR }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

      - name: Install
        run: cmake --install ${{ steps.strings.outputs.build-output-dir }} --config Release

      - name: Upload Install folder
        uses: actions/upload-artifact@v4
        with:
          name: revision_assistant_wasm
          path: build/install
